lz77.adb:242:22: medium: loop invariant might fail in first iteration, cannot prove To_Big_Integer (Input (P).Offset) <= (if P = Input'First then Zero else (Length_Acc (Input)) (P - 1)) (e.g. when Input = (1 => (Offset => 0, Length => 0, Next_C => 'NUL'), 2 => (Offset => 1, Length => 1, Next_C => 'NUL'), others => (Offset => 1, Length => 1, Next_C => 'NUL')) and Input'First = 1 and Input'Last = 2 and P = 2) [possible explanation: subprogram at lz77.ads:101 should mention Input in a precondition][#2]
lz77.adb:249:22: medium: loop invariant might fail in first iteration, cannot prove In_Range (Arg => Length_Acc (Input) (P), Low => To_Big_Integer (One), High => To_Big_Integer (Integer'last)) (e.g. when Input = (1 => (Offset => 0, Length => 0, Next_C => 'NUL'), others => (Offset => 0, Length => 0, Next_C => 'NUL')) and Input'First = 1 and Input'Last = 1 and P = 1) [possible explanation: subprogram at lz77.ads:101 should mention Input in a precondition][#1]
lz77.adb:257:52: medium: loop invariant might fail in first iteration, cannot prove Input (P).Length = 0 (e.g. when Input = (1 => (Offset => 0, Length => 0, Next_C => 'NUL'), 2 => (Offset => 0, Length => -1, Next_C => 'NUL'), others => (Offset => -1, Length => -1, Next_C => 'NUL')) and Input'First = 1 and Input'Last = 2 and P = 2) [possible explanation: subprogram at lz77.ads:101 should mention Input in a precondition][#0]
lz77.adb:323:20: medium: overflow check might fail (e.g. when I = Natural'Last)[#4]
lz77.adb:328:41: medium: overflow check might fail (e.g. when J = 1 and Output'First = 2147483646 and k = 1)[#8]
lz77.adb:328:45: medium: array index check might fail (e.g. when J = 2 and Output'First = 1 and Output'Last = 1 and k = 0)[#9]
lz77.adb:329:39: medium: overflow check might fail (e.g. when Output'First = 2147483647 and k = 1) [possible explanation: loop at line 322 should mention k in a loop invariant][#5]
lz77.adb:329:66: medium: overflow check might fail (e.g. when I = 2 and Input = (1 => (Offset => -2147483646, Length => 1, Next_C => 'NUL'), others => (Offset => -2147483646, Length => -2147483646, Next_C => 'NUL')) and Input'First = 1 and Input'Last = 1 and J = 1 and Output'First = 1 and k = 0)[#6]
lz77.adb:329:70: medium: array index check might fail (e.g. when I = 2 and Input = (1 => (Offset => -1, Length => 1, Next_C => 'NUL'), others => (Offset => -1, Length => -1, Next_C => 'NUL')) and Input'First = 1 and Input'Last = 1 and J = 1 and Output'First = 1 and Output'Last = 1 and k = 0)[#7]
lz77.adb:331:34: medium: overflow check might fail (e.g. when Output'First = 1 and k = Natural'Last) [possible explanation: loop at line 322 should mention k in a loop invariant][#10]
lz77.adb:331:38: medium: array index check might fail (e.g. when I = 2 and Input = (1 => (Offset => 0, Length => 1, Next_C => 'NUL'), others => (Offset => 1, Length => 1, Next_C => 'NUL')) and Input'First = 1 and Input'Last = 1 and Output'First = 1 and Output'Last = 1 and k = 0) [possible explanation: loop at line 322 should mention k in a loop invariant][#11]
lz77.ads:102:68: medium: postcondition might fail, cannot prove not Valid(Input,Input'last) (e.g. when Input = (1 => (Offset => 0, Length => 0, Next_C => 'NUL'), others => (Offset => 0, Length => 0, Next_C => 'NUL')) and Input'First = 1 and Input'Last = 2147483647)[#3]
lz77.ads:117:14: medium: postcondition might fail, cannot prove Output_Length = To_Integer(Decoded_Length(Input)) (e.g. when Input = (others => (Offset => 0, Length => 0, Next_C => 'NUL')) and Input'First = 2 and Input'Last = 1 and Output_Length = 0)[#12]
